#!/bin/bash

# Author: crims0n. <http://minios.dev>
# Author of original idea: parrothead. <https://groups.google.com/g/slax-users/c/3nsx5a8bu8s>

VERSION="1.0"
BEXT="sb"

function help() {
    echo "Usage: $(basename $0) [OPTIONS] PACKAGE1 [PACKAGE2] [...]"
    echo "Installs packages from repositories and packages them into a module."
    echo ""
    echo "Options:"
    echo "  -f, --file=FILE       use FILE as the filename for the module instead of PACKAGE1.$BEXT"
    echo "  -l, --level=LEVEL     use LEVEL as the filter level"
    echo "      --help            display this help and exit"
    echo "      --version         display version information and exit"
    echo ""
    echo "Examples:"
    echo "  $(basename $0) chromium chromium-sandbox"
    echo "  $(basename $0) --level=03 chromium chromium-sandbox"
    echo "  $(basename $0) chromium chromium-sandbox -f 06-chromium.$BEXT -l 3"
    exit 0
}

function brief_help() {
    echo "Usage: $(basename $0) [OPTIONS] PACKAGE1 [PACKAGE2] [...]"
    echo "Try '$(basename $0) --help' for more information."
    exit 1
}

function version() {
    echo "$(basename $0) $VERSION"
    exit 0
}

if [ $# -eq 0 ]; then
    brief_help
    exit 1
fi

while [ $# -gt 0 ]; do
    case "$1" in
    -f | --file=*)
        if [ "$1" == --* ]; then
            FILENAME="${1#*=}"
        else
            FILENAME="$2"
            shift
        fi
        shift
        ;;
    -l | --level=*)
        if [ "$1" == --* ]; then
            FILTER_LEVEL=$(printf "%02d" "${1#*=}")
        else
            FILTER_LEVEL=$(printf "%02d" "$2")
            shift
        fi
        shift
        ;;
    --help)
        help
        ;;
    --version)
        version
        ;;
    *) # unknown option
        if [ "$1" == -* ]; then
            brief_help
            shift
        else
            INSTALL_ALL="$INSTALL_ALL $1"
            shift
        fi
        ;;
    esac
done

if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root."
    brief_help
fi

if [ ! "$INSTALL_ALL" ]; then
    brief_help
fi

TMP=$(mktemp -d)
CHANGES=$TMP/changes
UNION=$TMP/union

trap 'umount $UNION; umount $TMP; rm -rf $TMP' EXIT

if [ -d /run/initramfs/memory/bundles ]; then
    BUNDLES=/run/initramfs/memory/bundles
elif [ -d /memory/bundles ]; then
    BUNDLES=/memory/bundles
fi

INSTALL=$(echo "$INSTALL_ALL" | awk '{print $1}')
[ -n "$INSTALL" ] || exit

mount -t tmpfs tmpfs $TMP
mkdir -p $CHANGES
mkdir -p $UNION

if [ -n "$FILTER_LEVEL" ]; then
    LOWERS=$(for BUNDLE in $(ls -1dr "$BUNDLES"/*); do
        if [[ $(basename "$BUNDLE") =~ ^[0-9]+ ]]; then
            if [ ${BASH_REMATCH[0]} -gt $FILTER_LEVEL ]; then
                continue
            fi
        fi
        printf '%s:' "$BUNDLE"
    done)
    LOWERS=${LOWERS/%:/}
else
    LOWERS=$(printf '%s:' $(ls -1dr "$BUNDLES"/*))
    LOWERS=${LOWERS/%:/}
fi

mkdir $TMP/work

mount -t overlay -o lowerdir=$LOWERS,upperdir=$CHANGES,workdir=$TMP/work overlay $UNION

for d in boot dev proc sys tmp media mnt run; do
    mkdir -p $UNION/$d
done

chmod ugo+rwx $UNION/tmp

for d in dev proc sys; do mount --bind /$d $UNION/$d; done

echo "apt-get update; apt-get install --yes $INSTALL_ALL" >$UNION/install
chmod ugo+x $UNION/install
mount --bind /etc/resolv.conf $UNION/etc/resolv.conf
if ! chroot $UNION /install; then
    FAILED="true"
fi

umount $UNION/etc/resolv.conf
umount $UNION/sys
umount $UNION/proc
umount $UNION/dev
rm $CHANGES/install
rmdir $CHANGES/* 2>/dev/null

if [ "$FAILED" != "true" ]; then
    if [ ! "$FILENAME" ]; then
        if [ -n "$FILTER_LEVEL" ]; then
            PREFIX="$(printf "%02d" $((10#$FILTER_LEVEL + 1)))-"
        else
            PREFIX=""
        fi
        FILENAME="$PREFIX$INSTALL".$BEXT
    fi

    echo "Saving changes made by installing packages into a module "$FILENAME"..."
    savechanges "$FILENAME" $CHANGES
fi
